[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "RNA editing report website",
    "section": "",
    "text": "flowchart TB\n  \n \n  \n  A[(Raw data)] --- t1(01.Cleaning notebook) \n  t1 --> B[(Cleaned data)]\n  B --- t2(02A.COTAN analysis src)  --> C[(COTAN obj)]\n  \n  C --- t3(03.COTAN clustering src) --> D[(Clustered COTAN obj)] \n  \n  \n  t3 --> CD[(Seurat obj with COTAN cl.)]\n  \n  CD --> t5(Data exploration + Markers +cluster identification notebook) \n  \n  D --> t5\n  \n  t5 --> G[(Seurat obj with cell id)]\n  t5 --> H[(COTAN obj with cell id)]\n  \n  G -->  t6(Exploration & Conclusion notebook) \n  H --> t6\n  \n  \n  classDef src fill:#66cc33;\n  classDef notebook fill:#cc99ff;\n  \n  class t1,t5,t6 notebook;\n  class t2,t3,t4 src;"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "1 + 1\n\n[1] 2"
  },
  {
    "objectID": "IBD/results/01A_Seurat_import_clean.html",
    "href": "IBD/results/01A_Seurat_import_clean.html",
    "title": "IBD pooled dataset cleaning",
    "section": "",
    "text": "library(stringr)\nlibrary(Seurat)\n\nAttaching SeuratObject\n\n\nAttaching sp\n\nlibrary(ggplot2)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(RColorBrewer)"
  },
  {
    "objectID": "IBD/results/01A_Seurat_import_clean.html#cell-cycle-score",
    "href": "IBD/results/01A_Seurat_import_clean.html#cell-cycle-score",
    "title": "IBD pooled dataset cleaning",
    "section": "Cell cycle score",
    "text": "Cell cycle score\nA list of cell cycle markers, from Tirosh et al, 2015, is loaded with Seurat. We can segregate this list into markers of G2/M phase and markers of S phase\n\ns.genes <- cc.genes.updated.2019$s.genes\ns.genes <- c(s.genes,str_to_lower(s.genes))\ng2m.genes <- cc.genes.updated.2019$g2m.genes\ng2m.genes <- c(g2m.genes, str_to_lower(g2m.genes))\nsrat <- CellCycleScoring(srat, s.features = s.genes, g2m.features = g2m.genes, set.ident = TRUE)\n\nWarning: The following features are not present in the object: mcm5, pcna,\ntyms, fen1, mcm7, mcm4, rrm1, ung, gins2, mcm6, cdca7, dtl, prim1, uhrf1, cenpu,\nhells, rfc2, polr1b, nasp, rad51ap1, gmnn, wdr76, slbp, ccne2, ubr7, pold3,\nmsh2, atad2, rad51, rrm2, cdc45, cdc6, exo1, tipin, dscc1, blm, casp8ap2, usp1,\nclspn, pola1, chaf1b, mrpl36, e2f8, not searching for symbol synonyms\n\n\nWarning: The following features are not present in the object: PIMREG, JPT1,\nhmgb2, cdk1, nusap1, ube2c, birc5, tpx2, top2a, ndc80, cks2, nuf2, cks1b, mki67,\ntmpo, cenpf, tacc3, pimreg, smc4, ccnb2, ckap2l, ckap2, aurkb, bub1, kif11,\nanp32e, tubb4b, gtse1, kif20b, hjurp, cdca3, jpt1, cdc20, ttk, cdc25c, kif2c,\nrangap1, ncapd2, dlgap5, cdca2, cdca8, ect2, kif23, hmmr, aurka, psrc1, anln,\nlbr, ckap5, cenpe, ctcf, nek2, g2e3, gas2l3, cbx5, cenpa, not searching for\nsymbol synonyms\n\n# view cell cycle scores and phase assignments\nhead(srat[[]])\n\n                       orig.ident nCount_RNA nFeature_RNA percent.mt percent.rb\nCol_AAACCTGAGATGCGAC.1          1       4379         1199  3.3340945   45.69536\nCol_AAACCTGAGGAATTAC.1          1       4004         1417  0.7742258   37.06294\nCol_AAACCTGCAGATGGGT.1          1       5819         1969  2.6980581   34.47328\nCol_AAACCTGGTTCGGGCT.1          1       4340         1549  4.0783410   33.66359\nCol_AAACCTGGTTTGCATG.1          1       4899         1768  4.4498877   31.72076\nCol_AAACCTGTCACATGCA.1          1       3668         1352  3.1352236   36.55943\n                       RNA_snn_res.0.3 seurat_clusters     S.Score   G2M.Score\nCol_AAACCTGAGATGCGAC.1               3               3 -0.04526088 -0.06738658\nCol_AAACCTGAGGAATTAC.1               3               3 -0.06310393 -0.02992080\nCol_AAACCTGCAGATGGGT.1               3               3 -0.05474959 -0.06798010\nCol_AAACCTGGTTCGGGCT.1               3               3 -0.05709454  0.00728307\nCol_AAACCTGGTTTGCATG.1               5               5 -0.10716761 -0.05199952\nCol_AAACCTGTCACATGCA.1               3               3  0.01237206 -0.09404912\n                       Phase old.ident\nCol_AAACCTGAGATGCGAC.1    G1         3\nCol_AAACCTGAGGAATTAC.1    G1         3\nCol_AAACCTGCAGATGGGT.1    G1         3\nCol_AAACCTGGTTCGGGCT.1   G2M         3\nCol_AAACCTGGTTTGCATG.1    G1         5\nCol_AAACCTGTCACATGCA.1     S         3\n\n\n\nDimPlot(srat, reduction = \"umap\",group.by = \"Phase\")\n\n\n\n\n\nFeaturePlot(srat,features = c(\"S.Score\",\"G2M.Score\"),label.size = 4,repel = T,label = T) & \n  theme(plot.title = element_text(size=10))\n\n\n\n\n\nVlnPlot(srat,features = c(\"S.Score\",\"G2M.Score\"),group.by  = \"seurat_clusters\") & \n  theme(plot.title = element_text(size=10))\n\n\n\n\n“We suggest regressing out the difference between the G2M and S phase scores. This means that signals separating non-cycling cells and cycling cells will be maintained, but differences in cell cycle phase amongst proliferating cells (which are often uninteresting), will be regressed out of the data” From the Seurat official site.\n\nDimPlot(srat, reduction = \"pca\",group.by = \"Phase\")\n\n\n\n\n\n#srat$CC.Difference <- srat$S.Score - srat$G2M.Score\n#srat <- ScaleData(srat, vars.to.regress = \"CC.Difference\", features = rownames(srat))\n\n\nsrat <- readRDS(\"../data/02_cleaned_data/Seurat_colitis_data.RDS\")\n\n\n# Now, a PCA on the variable genes no longer returns components associated with cell cycle\nsrat <- RunPCA(srat, features = VariableFeatures(srat), nfeatures.print = 25)\n\nPC_ 1 \nPositive:  B2M, HLA-A, IFITM1, CD3E, IL32, CD3D, CD7, FYB, CD3G, CD2 \n       LCP2, CCL5, CD247, CD96, ITM2A, RARRES3, GIMAP7, ZFP36L2, HCST, SRGN \n       CST7, LAT, IL2RB, NKG7, S100A4 \nNegative:  RGS13, MEF2B, STMN1, CDCA7, KIAA0101, ELL3, TYMS, RRM2, UBE2C, CDT1 \n       TK1, NUSAP1, BIRC5, POU2AF1, MKI67, MARCKSL1, CCNA2, CDKN3, KIFC1, CCNB2 \n       UHRF1, UBE2J1, CDCA3, TOP2A, TCL1A \nPC_ 2 \nPositive:  HLA-DQA1, HLA-DRA, HLA-DPB1, CD79A, CD74, HLA-DQB1, HLA-DRB1, HLA-DPA1, MS4A1, VPREB3 \n       CD79B, CD83, FCER2, HLA-DRB5, LTB, FCRLA, KLF2, CR2, PHACTR1, TCL1A \n       CD40, IGHM, CD24, GM2A, PLD4 \nNegative:  CD3E, IL32, CD7, CD3D, CCL5, CD3G, HCST, CD247, NKG7, LCP2 \n       CD2, FYB, CD96, CST7, IL2RB, SRGN, RARRES3, GAPDH, FYN, TNFAIP3 \n       KLRD1, PRKCH, GZMM, ITM2A, ID2 \nPC_ 3 \nPositive:  TCF7, CD4, PDCD1, SPOCK2, PASK, IL6R, CD28, CD5, IL6ST, TOX2 \n       TC2N, CTLA4, CD6, ACTN1, LAT, ICOS, GPR183, MAF, CCR7, RRM2 \n       SH2D1A, GIMAP4, FBLN7, CTSB, TYMS \nNegative:  HOPX, NKG7, CCL5, KLRD1, KIR2DL4, GZMA, FCER1G, GSTP1, CD63, ITGA1 \n       GZMB, MYO1E, CST7, LGALS1, PRF1, RHOC, MEF2B, GAPDH, FASLG, CTSW \n       ID2, SH2D1B, TMIGD2, ACTG1, SERPINA9 \nPC_ 4 \nPositive:  HLA-DRB1, HLA-DPA1, FTL, HLA-DPB1, CAPG, FCER2, HLA-DQA1, HLA-DRA, RRM2, TUBA1B \n       CCNA2, TYMS, HLA-DQB1, KLF2, VIM, CDK1, ASF1B, KIFC1, KIR2DL4, PKMYT1 \n       CCL5, UBE2C, KLRD1, CD74, UHRF1 \nNegative:  CD27, PDCD1, MEF2B, PASK, SERPINA9, RGS13, TOX2, CD4, TCF7, LAT \n       CTLA4, ISG20, CORO1B, MAF, DCAF12, IL6R, FKBP5, SH2D1A, ELL3, HMCES \n       ICOS, CD28, ACTG1, TOX, IL6ST \nPC_ 5 \nPositive:  IL4I1, NFKBIA, KIT, IL23R, NR4A1, TNFRSF18, KRT86, TYROBP, ZFP36, LINC00299 \n       CD83, MAP3K8, TNFRSF4, CDKN1A, TNFSF13B, DUSP1, NR4A2, BHLHE40, PHLDA1, AREG \n       BCL2A1, KLF6, KIAA1324, FOS, FOSB \nNegative:  RPL28, GIMAP7, CD8A, GZMM, LEF1, GIMAP4, GIMAP1, CD8B, LINC00861, CD3G \n       CXCR3, CD3D, CCL5, AICDA, NELL2, CD3E, S100A10, RPLP0, FYB, CST7 \n       IFNG-AS1, SUSD3, GZMK, CD27, RPLP1 \n\nDimPlot(srat, reduction = \"pca\",group.by = \"Phase\")\n\n\n\n\n\ngc()\n\n            used   (Mb) gc trigger    (Mb)   max used    (Mb)\nNcells   3466120  185.2    5097011   272.3    5097011   272.3\nVcells 779976759 5950.8 1797224541 13711.8 1793215236 13681.2\n\nsrat <- RunUMAP(srat, dims = 1:25, verbose = F)\nDimPlot(srat, reduction = \"umap\",group.by = \"Phase\")"
  },
  {
    "objectID": "Crohn_disease/results/01_cleaning_patient5_NB.html",
    "href": "Crohn_disease/results/01_cleaning_patient5_NB.html",
    "title": "Cleaning notebook patient 5",
    "section": "",
    "text": "#library(COTAN)\nlibrary(data.table)\nlibrary(Matrix)\nlibrary(ggrepel)\n\nLoading required package: ggplot2\n\n#library(factoextra)\n#library(Rtsne)\nlibrary(utils)\n#library(plotly)\n#library(tidyverse)\n#library(htmlwidgets)\n#library(MASS)\nlibrary(Seurat)\n\nAttaching SeuratObject\n\n\nAttaching sp\n\n#library(dendextend)\ndevtools::load_all(\"../../../COTAN/\")\n\nℹ Loading COTAN"
  },
  {
    "objectID": "Crohn_disease/results/01_cleaning_patient5_NB.html#general-cleaning",
    "href": "Crohn_disease/results/01_cleaning_patient5_NB.html#general-cleaning",
    "title": "Cleaning notebook patient 5",
    "section": "General cleaning",
    "text": "General cleaning\nWe want to remove cell doublets or multiplets and low-quality or dying cells (with too high mtRNA percentage).\n\nBy library sizes\nFirst we check the library size (UMI number) with an empirical cumulative distribution function.\n\nECD.plot(obj,y_cut = 12)\n\n\n\n\nSo to start we drop all cell with library size lower then 6.\nThe next plot shows the library size of each cell in a violin and box plot.\n\nsizes <- Matrix::colSums(obj@raw)\n\nobj <- drop.genes.cells(object = obj,cells = names(sizes[ sizes < 800]))\n\nlibrary.size.plot(obj,split.pattern = \"_\",n.col = 1)\n\nScale for 'y' is already present. Adding another scale for 'y', which will\nreplace the existing scale.\n\n\n\n\n\nWe can subset and drop the unwanted cell by library size.\n\nsizes <- Matrix::colSums(obj@raw)\n\nobj <- drop.genes.cells(object = obj,cells = names(sizes[ sizes > 10000]))\n\nlibrary.size.plot(obj,split.pattern = \"_\",n.col = 1)\n\nScale for 'y' is already present. Adding another scale for 'y', which will\nreplace the existing scale.\n\n\nWarning: Removed 1 rows containing missing values (geom_point).\n\n\n\n\n\n\ndim(obj@raw)\n\n[1] 19611  9894\n\n\n\n\nBy mitochondrial gene percentage\nWe will next have a look the percentage of reads coming from mitochondrial genes. This can help to drop dying cells: these cells will have a percentage of mitochondrial reads particularly high.\n\ndf <- mitochondrial.percentage.plot(obj,split.pattern = \"_\",n.col = 1,gene.prefix = \"^MT-\")\n\ndf$plot\n\n\n\n\n\nobj <- drop.genes.cells(object = obj,cells = rownames(df$sizes[df$sizes$mit.percentage > 10,]))\ndf <- mitochondrial.percentage.plot(obj,split.pattern = \"_\",n.col = 1,gene.prefix = \"^MT-\")\n\ndf$plot\n\n\n\n\nWe check again the library size plot\n\nlibrary.size.plot(obj,split.pattern = \"_\",n.col = 1)\n\nScale for 'y' is already present. Adding another scale for 'y', which will\nreplace the existing scale.\n\n\n\n\n\n\nECD.plot(obj,y_cut = 12)\n\n\n\n\n\n\nGene and library size scatter plot\n\nscatter.plot(obj = obj,split.pattern = \"[_]\",n.col = 1)\n\n\n\n\nMin gene number\n\nsort(colSums(obj@raw > 0),decreasing = F)[1:10]\n\n69_CATTGACTTAGTCG-1 69_ACGATGACTGCAGT-1 69_CATTGACTTAAAGG-1 69_AGCCACCTCTGTTT-1 \n                 21                  23                  24                  25 \n69_ATCGAGTGAGGTTC-1 69_GGTAAAGAGGTTCA-1 69_AACCACGATTGTCT-1 69_CCCAACACTCCTTA-1 \n                 26                  26                  28                  28 \n69_GGACCTCTTGCCAA-1 69_TAGTCACTCTTATC-1 \n                 28                  28 \n\n\nWe decided to drop all cells having less then 10 genes detected\n\nto.drop <- names(sort(colSums(obj@raw > 0),decreasing = F)[sort(colSums(obj@raw > 0),decreasing = F) < 10])\n\nobj <- drop.genes.cells(object = obj,cells = to.drop)\nscatter.plot(obj = obj,split.pattern = \"[_]\",n.col = 1)\n\n\n\n\n\nlibrary.size.plot(obj,split.pattern = \"_\",n.col = 1)\n\nScale for 'y' is already present. Adding another scale for 'y', which will\nreplace the existing scale.\n\n\nWarning: Removed 1 rows containing missing values (geom_point).\n\n\n\n\n\n\nobj <- initRaw(obj,GEO=\"GSM3972009\",sc.method=\"10X\",\n             cond = \"patient.5 ileum\")\n\n[1] \"Initializing S4 object\"\n\n\n\nprint(paste(\"Condition \", patient ,sep = \"\"))\n\n[1] \"Condition patient5_ileum\"\n\n#--------------------------------------\nn_cells = length(get.cell.size(object = obj))\nprint(paste(\"n cells\", n_cells, sep = \" \"))\n\n[1] \"n cells 9742\"\n\nn_it = 1"
  },
  {
    "objectID": "Crohn_disease/results/01_cleaning_patient5_NB.html#cotan-specific-data-cleaning",
    "href": "Crohn_disease/results/01_cleaning_patient5_NB.html#cotan-specific-data-cleaning",
    "title": "Cleaning notebook patient 5",
    "section": "COTAN specific data cleaning",
    "text": "COTAN specific data cleaning\nFirst, we create a directory to store all information regarding the data cleaning.\n\nif(!file.exists(out_dir)){\n  dir.create(file.path(out_dir))\n}\n\nif(!file.exists(paste(out_dir,\"cleaning\", sep = \"\"))){   \n  dir.create(file.path(out_dir, \"cleaning\"))\n}\n\n\ngc()\n\n           used  (Mb) gc trigger   (Mb)  max used   (Mb)\nNcells  5419194 289.5   10165848  543.0  10165848  543.0\nVcells 49977138 381.3  151816515 1158.3 157711343 1203.3\n\nttm = clean(obj)\n\n[1] \"Starting\"\n[1] \"Cells/genes selection done\"\n[1] \"Start estimation mu with linear method\"\n[1] 11246  9742\n[1] \"Fun linear DONE\"\n[1] \"raw_norm DONE\"\n[1] \"hclust DONE\"\n       rowname 68_AAGTTATGAGTGCT-1 68_ACTACGGAGTTGCA-1 68_ATTCTGACGTCAAC-1\n10882    IGLC7         1317.077819         1527.538708        1688.9457692\n8018     IGHA1          453.831800          656.348890         534.7259123\n2718    JCHAIN          115.871949          123.517108         137.9198797\n8022      IGHM            0.000000            0.000000           0.4582056\n1487      IGKC           13.518394          186.589674           2.7492335\n6066    MALAT1           59.867174           28.908259          49.0279971\n8013     IGHA2            3.862398            1.971018         114.0931895\n4890     RPL10           52.142377           12.483112           6.8730837\n8151       B2M            5.793597           11.169100          13.7461674\n8890     RPL13           19.311991            1.971018           2.2910279\n10860 IGLV5-45            0.000000           39.420354           0.0000000\n11012     RPL3           15.449593            2.628024           1.8328223\n3657     RPS18            7.724797            3.285029           4.1238502\n8263     RPLP1            5.793597            1.314012           5.4984670\n3796    EEF1A1           15.449593            3.285029           2.2910279\n      68_CAGAAGCTGGTACT-1 68_CATACTACTTCGCC-1 68_CGCCGAGAGAGAGC-1\n10882         1318.613009         1797.515336         1410.852649\n8018           616.465111          509.267561            7.646898\n2718           180.384817           92.180274          147.585128\n8022             1.352886            0.000000          713.455567\n1487            92.898181           13.087323            6.882208\n6066            28.861571           21.053519           44.352007\n8013             2.254810           95.594358            0.000000\n4890            19.842330           10.811267           15.293796\n8151            17.136558            8.535211           22.940693\n8890            13.077899            6.828168            8.411588\n10860            0.000000           34.140842            0.000000\n11012            7.215393            6.828168            4.588139\n3657             7.666355            2.276056            3.058759\n8263            11.274051            4.552112            6.882208\n3796             9.470203            4.552112            8.411588\n      68_CTAAGGTGCCTCCA-1 68_GAGTCTGATTGTCT-1 68_GTTATAGATGCCTC-1\n10882         1561.954667        1804.9900309        1341.1890993\n8018           363.221342         328.5413047         662.3216125\n2718           155.372302         200.0392621          95.3820985\n8022             1.028956           0.6623817           0.4866434\n1487            41.158226          31.7943198          11.6794406\n6066            37.042403          19.2090682          47.6910492\n8013             1.028956          60.2767313           2.9198602\n4890            13.376423           9.2733433          19.9523777\n8151            19.550157           4.6366716          26.2787414\n8890            12.347468           5.2990533          11.6794406\n10860            0.000000          41.0676631           0.0000000\n11012           14.405379          11.2604883           7.7862938\n3657             9.260601           5.2990533          11.1927973\n8263             6.173734           3.9742900          11.6794406\n3796            11.318512           3.9742900           7.7862938\n      68_TACACACTTTCCGC-1 68_TGTAATGATATTCC-1 68_TTCGATTGGTTCGA-1\n10882         1155.679245         1453.789436         1537.399927\n8018             4.120069          437.735302          535.449995\n2718           144.202401           95.908297          155.292922\n8022           135.962264           13.935394            0.000000\n1487            94.761578           47.134419           54.041937\n6066           103.001715           33.199026           29.195069\n8013             0.000000            1.229594            3.727030\n4890            35.020583           29.100381           19.877494\n8151            39.140652           18.853768           24.225696\n8890            24.720412           13.525529            9.317575\n10860            0.000000            0.000000            0.000000\n11012           10.300172           15.574852            4.969374\n3657            22.660377           10.656477            9.938747\n8263            18.540309           11.066342            6.832889\n3796            10.300172           10.246613            4.969374\n[1] \"PCA start\"\n[1] \"PCA done\"\n\nobj = ttm$object\n\nttm$pca.cell.2\n\n\n\n\n\nttm$pca_cells$code <- str_split(rownames(ttm$pca_cells),pattern = \"_\",simplify = T)[,1]\n\nggplot(ttm$pca_cells, aes(x=PC1, y=PC2,colour =code)) +\n                  geom_point(alpha = 0.5, size=2)\n\n\n\n\n\nggplot(ttm$pca_cells, aes(x=PC1, y=PC3,colour =code)) +\n                  geom_point(alpha = 0.5, size=2)\n\n\n\n\n\nttm$genes.plot\n\nWarning: ggrepel: 13 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n\n\n\n\n\nTo color the PCA based on cells’ RNA extraction efficiency\n\nttm$UDE.plot\n\n\n\n\nUDE (color) should not correlate with principal components! This is very important. The next part is used to remove the cells with efficiency too low.\n\nnu_df = data.frame(\"nu\"= sort(get.nu(obj)), \"n\"=c(1:length(get.nu(obj))))\n\nggplot(nu_df, aes(x = n, y=nu)) + \n    geom_point(colour = \"#8491B4B2\", size=1)\n\n\n\n    #my_theme #+ ylim(0,1) + xlim(0,70)\n\nWe can zoom on the smallest values and, if we detect a clear elbow, we can decide to remove the cells.\n\nyset = 0.024#threshold to remove low UDE cells\nplot.ude <- ggplot(nu_df, aes(x = n, y=nu)) + \n    geom_point(colour = \"#8491B4B2\", size=1) + \n     ylim(0,0.1) + xlim(0,5000) +\n    geom_hline(yintercept=yset, linetype=\"dashed\", color = \"darkred\") +\n    annotate(geom=\"text\", x=200, y=0.05, \n             label=paste(\"to remove cells with nu < \",yset,sep = \" \"), \n             color=\"darkred\", size=4.5)\n\nplot.ude\n\nWarning: Removed 9742 rows containing missing values (geom_point).\n\n\n\n\n\nFor this round of analysis, we want to keep the low UMI cells to keep a cell population with very low amounts of RNA as neutrophil cells. So we drop only cell with a nu lower then 0.024 here.\n\n#obj = add.row.to.meta(obj,c(\"Threshold low UDE cells:\",yset)) \n\n#to_rem = rownames(nu_df[which(nu_df$nu < yset),])\n\n#obj = drop.genes.cells(object = obj, genes = c(),cells =  to_rem)\n\n\n#print(paste(\"Condition \", patient ,sep = \"\"))\n#--------------------------------------\n#n_cells = length(get.cell.size(object = obj))\n#print(paste(\"n cells\", n_cells, sep = \" \"))\n\n#n_it = 1\n\n\n#ttm = clean(obj)\n\n#obj = ttm$object\n\n#ttm$pca.cell.2\n\n\nttm$genes.plot\n\nWarning: ggrepel: 13 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n\n\n\n\n\n\nttm$UDE.plot\n\n\n\n\n\nECD.plot(obj,y_cut = 12)\n\n\n\n\n\nscatter.plot(obj = obj,split.pattern = \"[_]\",n.col = 1)\n\n\n\n\n\n#saveRDS(obj,paste0(out_dir,patient,\"_obj_cotan.RDS\"))"
  },
  {
    "objectID": "Crohn_disease/results/01_cleaning_patient7_NB.html",
    "href": "Crohn_disease/results/01_cleaning_patient7_NB.html",
    "title": "Cleaning notebook patient 7",
    "section": "",
    "text": "#library(COTAN)\nlibrary(data.table)\nlibrary(Matrix)\nlibrary(ggrepel)\n\nLoading required package: ggplot2\n\n#library(factoextra)\n#library(Rtsne)\nlibrary(utils)\n#library(plotly)\n#library(tidyverse)\n#library(htmlwidgets)\n#library(MASS)\nlibrary(Seurat)\n\nAttaching SeuratObject\n\n\nAttaching sp\n\n#library(dendextend)\ndevtools::load_all(\"../../../COTAN/\")\n\nℹ Loading COTAN"
  },
  {
    "objectID": "Crohn_disease/results/01_cleaning_patient7_NB.html#general-cleaning",
    "href": "Crohn_disease/results/01_cleaning_patient7_NB.html#general-cleaning",
    "title": "Cleaning notebook patient 7",
    "section": "General cleaning",
    "text": "General cleaning\nWe want to remove cell doublets or multiplets and low-quality or dying cells (with too high mtRNA percentage).\n\nBy library sizes\nFirst we check the library size (UMI number) with an empirical cumulative distribution function.\n\nECD.plot(obj,y_cut = 25)\n\n\n\n\nSo to start we drop all cell with library size lower then 6.\nThe next plot shows the library size of each cell in a violin and box plot.\n\nsizes <- Matrix::colSums(obj@raw)\n\nobj <- drop.genes.cells(object = obj,cells = names(sizes[ sizes < 25]))\n\nlibrary.size.plot(obj,split.pattern = \"_\",n.col = 1)\n\nScale for 'y' is already present. Adding another scale for 'y', which will\nreplace the existing scale.\n\n\n\n\n\nWe can subset and drop the unwanted cell by library size.\n\nsizes <- Matrix::colSums(obj@raw)\n\nobj <- drop.genes.cells(object = obj,cells = names(sizes[ sizes > 5000]))\n\nlibrary.size.plot(obj,split.pattern = \"_\",n.col = 1)\n\nScale for 'y' is already present. Adding another scale for 'y', which will\nreplace the existing scale.\n\n\n\n\n\n\ndim(obj@raw)\n\n[1] 20208 11016\n\n\n\n\nBy mitochondrial gene percentage\nWe will next have a look the percentage of reads coming from mitochondrial genes. This can help to drop dying cells: these cells will have a percentage of mitochondrial reads particularly high.\n\ndf <- mitochondrial.percentage.plot(obj,split.pattern = \"_\",n.col = 1,gene.prefix = \"^MT-\")\n\ndf$plot\n\n\n\n\n\nobj <- drop.genes.cells(object = obj,cells = rownames(df$sizes[df$sizes$mit.percentage > 15,]))\ndf <- mitochondrial.percentage.plot(obj,split.pattern = \"_\",n.col = 1,gene.prefix = \"^MT-\")\n\ndf$plot\n\n\n\n\nWe check again the library size plot\n\nlibrary.size.plot(obj,split.pattern = \"_\",n.col = 1)\n\nScale for 'y' is already present. Adding another scale for 'y', which will\nreplace the existing scale.\n\n\n\n\n\n\nECD.plot(obj,y_cut = 15)\n\n\n\n\n\n\nGene and library size scatter plot\n\nscatter.plot(obj = obj,split.pattern = \"[_]\",n.col = 1)\n\n\n\n\nMin gene number\n\nsort(colSums(obj@raw > 0),decreasing = F)[1:10]\n\n128_TACGGGCCAGCAGTTT-1 128_TCTTCGGTCAACGGCC-1 129_GCACTCTTCTCAAACG-1 \n                     5                      5                      6 \n128_AACTCCCAGCTAAACA-1 128_ACGATACTCGTAGATC-1 128_AGCGTATAGCGTCAAG-1 \n                     7                      7                      7 \n128_ATTACTCGTAGCACGA-1 128_CACCACTCATGTCGAT-1 128_CGACTTCAGGGTGTTG-1 \n                     7                      7                      7 \n128_CGAGCCATCTGTCCGT-1 \n                     7 \n\n\nWe decided to drop all cells having less then 10 genes detected\n\nto.drop <- names(sort(colSums(obj@raw > 0),decreasing = F)[sort(colSums(obj@raw > 0),decreasing = F) < 10])\n\nobj <- drop.genes.cells(object = obj,cells = to.drop)\nscatter.plot(obj = obj,split.pattern = \"[_]\",n.col = 1)\n\n\n\n\n\nlibrary.size.plot(obj,split.pattern = \"_\",n.col = 1)\n\nScale for 'y' is already present. Adding another scale for 'y', which will\nreplace the existing scale.\n\n\n\n\n\n\nobj <- initRaw(obj,GEO=\"GSM3972009\",sc.method=\"10X\",\n             cond = \"patient.7 ileum\")\n\n[1] \"Initializing S4 object\"\n\n\n\nprint(paste(\"Condition \", patient ,sep = \"\"))\n\n[1] \"Condition patient7_ileum\"\n\n#--------------------------------------\nn_cells = length(get.cell.size(object = obj))\nprint(paste(\"n cells\", n_cells, sep = \" \"))\n\n[1] \"n cells 7767\"\n\nn_it = 1"
  },
  {
    "objectID": "Crohn_disease/results/01_cleaning_patient7_NB.html#cotan-specific-data-cleaning",
    "href": "Crohn_disease/results/01_cleaning_patient7_NB.html#cotan-specific-data-cleaning",
    "title": "Cleaning notebook patient 7",
    "section": "COTAN specific data cleaning",
    "text": "COTAN specific data cleaning\nFirst, we create a directory to store all information regarding the data cleaning.\n\nif(!file.exists(out_dir)){\n  dir.create(file.path(out_dir))\n}\n\nif(!file.exists(paste(out_dir,\"cleaning\", sep = \"\"))){   \n  dir.create(file.path(out_dir, \"cleaning\"))\n}\n\n\ngc()\n\n           used  (Mb) gc trigger  (Mb)  max used  (Mb)\nNcells  5340397 285.3   10166054 543.0   9948371 531.4\nVcells 37653382 287.3  119195499 909.4 123725206 944.0\n\nttm = clean(obj)\n\n[1] \"Starting\"\n[1] \"Cells/genes selection done\"\n[1] \"Start estimation mu with linear method\"\n[1] 10715  7767\n[1] \"Fun linear DONE\"\n[1] \"raw_norm DONE\"\n[1] \"hclust DONE\"\n      rowname 128_CATCGGGTCTTAGAGC-1 129_AACTCTTAGTAGTGCG-1\n7659     IGHM             498.480878             657.795048\n1414     IGKC             155.514926               3.308828\n5816   MALAT1              84.700094              68.161861\n2600   JCHAIN              68.037780              35.735345\n2440   RPL35A               2.777052               0.000000\n7769      B2M               0.000000               1.985297\n196      CD52               0.000000               0.000000\n2302     GYG1               0.000000               0.000000\n3199    CSF1R               0.000000               0.000000\n4236   DNAJB9               0.000000               0.000000\n4431    RBBP7               0.000000               0.000000\n6211   CXCL12               0.000000               0.000000\n10351   IGLL5               0.000000              11.250016\n10708  MT-ND3               0.000000               9.926485\n4696     SSR4               5.554104               3.970594\n      129_CTGATCCCACGCCAGT-1\n7659               525.53320\n1414               262.76660\n5816                 0.00000\n2600                 0.00000\n2440                37.53809\n7769                37.53809\n196                 37.53809\n2302                37.53809\n3199                37.53809\n4236                37.53809\n4431                37.53809\n6211                37.53809\n10351                0.00000\n10708                0.00000\n4696                 0.00000\n[1] \"PCA start\"\n[1] \"PCA done\"\n\nobj = ttm$object\n\nttm$pca.cell.2\n\n\n\n\n\nttm$pca_cells$code <- str_split(rownames(ttm$pca_cells),pattern = \"_\",simplify = T)[,1]\n\nggplot(ttm$pca_cells, aes(x=PC1, y=PC2,colour =code)) +\n                  geom_point(alpha = 0.5, size=2)\n\n\n\n\n\nggplot(ttm$pca_cells, aes(x=PC1, y=PC3,colour =code)) +\n                  geom_point(alpha = 0.5, size=2)\n\n\n\n\n\nttm$genes.plot\n\nWarning: ggrepel: 13 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n\n\n\n\n\nTo color the PCA based on cells’ RNA extraction efficiency\n\nttm$UDE.plot\n\n\n\n\nUDE (color) should not correlate with principal components! This is very important. The next part is used to remove the cells with efficiency too low.\n\nnu_df = data.frame(\"nu\"= sort(get.nu(obj)), \"n\"=c(1:length(get.nu(obj))))\n\nggplot(nu_df, aes(x = n, y=nu)) + \n    geom_point(colour = \"#8491B4B2\", size=1)\n\n\n\n    #my_theme #+ ylim(0,1) + xlim(0,70)\n\nWe can zoom on the smallest values and, if we detect a clear elbow, we can decide to remove the cells.\n\nyset = 0.025#threshold to remove low UDE cells\nplot.ude <- ggplot(nu_df, aes(x = n, y=nu)) + \n    geom_point(colour = \"#8491B4B2\", size=1) + \n     ylim(0,0.2) + xlim(0,5000) +\n    geom_hline(yintercept=yset, linetype=\"dashed\", color = \"darkred\") +\n    annotate(geom=\"text\", x=200, y=0.05, \n             label=paste(\"to remove cells with nu < \",yset,sep = \" \"), \n             color=\"darkred\", size=4.5)\n\nplot.ude\n\nWarning: Removed 4970 rows containing missing values (geom_point).\n\n\n\n\n\nFor this round of analysis, we want to keep the low UMI cells to keep a cell population with very low amounts of RNA as neutrophil cells. So we drop only cell with a nu lower then 0.024 here.\n\nobj = add.row.to.meta(obj,c(\"Threshold low UDE cells:\",yset)) \n\nto_rem = rownames(nu_df[which(nu_df$nu < yset),])\n\nobj = drop.genes.cells(object = obj, genes = c(),cells =  to_rem)\n\n\nprint(paste(\"Condition \", patient ,sep = \"\"))\n\n[1] \"Condition patient7_ileum\"\n\n#--------------------------------------\nn_cells = length(get.cell.size(object = obj))\nprint(paste(\"n cells\", n_cells, sep = \" \"))\n\n[1] \"n cells 7324\"\n\nn_it = 1\n\n\nttm = clean(obj)\n\n[1] \"Starting\"\n[1] \"Cells/genes selection done\"\n[1] \"Start estimation mu with linear method\"\n[1] 10715  7324\n[1] \"Fun linear DONE\"\n[1] \"raw_norm DONE\"\n[1] \"hclust DONE\"\n       rowname 128_ACACCCTGTTAAGAAC-1 128_ACGGGTCGTGTTCTTT-1\n10352    IGLC2            286.8249799              374.69136\n7655     IGHA1              0.6995731                0.00000\n7656     IGHG1             48.2705454              115.28965\n5816    MALAT1            240.6531539                0.00000\n2600    JCHAIN             34.2790830                0.00000\n10353    IGLC3              2.7982925              216.16809\n7657     IGHG3             50.3692648               57.64483\n1414      IGKC              3.4978656                0.00000\n7659      IGHM              1.3991462                0.00000\n10336 IGLV1-51              0.0000000                0.00000\n7650     IGHA2              1.3991462                0.00000\n7651     IGHG4              0.6995731               57.64483\n4696      SSR4              4.1974387                0.00000\n10344 IGLV3-21              0.0000000                0.00000\n7769       B2M              1.3991462               28.82241\n      128_AGCAGCCCATGTCTCC-1 128_ATGCGATGTAATAGCA-1 128_ATGTGTGTCAATACCG-1\n10352              371.90210            267.7106909              661.22005\n7655                37.19021              1.2432385                0.00000\n7656                 0.00000            120.1797219              118.68052\n5816                 0.00000             85.3690438                0.00000\n2600                 0.00000              0.0000000                0.00000\n10353                0.00000            140.0715379                0.00000\n7657                 0.00000            104.4320342              110.20334\n1414               148.76084              5.8017797               16.95436\n7659                74.38042              1.6576513                0.00000\n10336              185.95105              0.0000000                0.00000\n7650                 0.00000              0.0000000                0.00000\n7651                 0.00000             50.1439529                0.00000\n4696                 0.00000              3.3153027                8.47718\n10344                0.00000              0.0000000                0.00000\n7769                 0.00000              0.8288257                8.47718\n      128_ATTCTACCACCCATTC-1 128_CAAGTTGAGATCGGGT-1 128_CCACTACAGATCACGG-1\n10352              309.31370              447.44653               269.0092\n7655                 0.00000                1.80422               307.4391\n7656                 0.00000                0.00000                 0.0000\n5816                 0.00000                0.00000                 0.0000\n2600                56.23885              158.77135                 0.0000\n10353                0.00000                5.41266                 0.0000\n7657                 0.00000                0.00000                 0.0000\n1414                28.11943                5.41266                 0.0000\n7659                 0.00000              312.13004                 0.0000\n10336                0.00000               41.49706                 0.0000\n7650                 0.00000                0.00000                 0.0000\n7651                28.11943                0.00000                 0.0000\n4696                56.23885                3.60844                 0.0000\n10344                0.00000                0.00000                 0.0000\n7769                28.11943                5.41266                 0.0000\n      128_CCCAGTTGTTTGGGCC-1 128_CTAGTGACAACGATCT-1 128_CTGGTCTCAAACGCGA-1\n10352              506.14968              373.91238              413.86028\n7655                56.23885                0.00000                0.00000\n7656               140.59713               31.15936              266.05304\n5816                 0.00000                0.00000                0.00000\n2600                 0.00000                0.00000                0.00000\n10353                0.00000                0.00000                0.00000\n7657                56.23885                0.00000               88.68435\n1414                84.35828              186.95619                0.00000\n7659                 0.00000               62.31873                0.00000\n10336                0.00000               31.15936               59.12290\n7650                 0.00000                0.00000                0.00000\n7651                 0.00000                0.00000               29.56145\n4696                 0.00000                0.00000                0.00000\n10344               84.35828                0.00000                0.00000\n7769                 0.00000                0.00000                0.00000\n      128_GACGTTAAGATGCCTT-1 128_GATCGATCACAAGCCC-1 128_GCAGCCAAGTAGCCGA-1\n10352             365.083893              526.32232              319.26365\n7655                0.000000                0.00000               17.73687\n7656              182.541947                0.00000              212.84243\n5816                0.000000                0.00000               17.73687\n2600                0.000000                0.00000                0.00000\n10353             288.224126               25.06297              195.10556\n7657               64.049806                0.00000              159.63182\n1414                3.202490              125.31484               17.73687\n7659                0.000000                0.00000                0.00000\n10336               0.000000                0.00000                0.00000\n7650                0.000000                0.00000                0.00000\n7651               32.024903                0.00000               17.73687\n4696                9.607471               25.06297                0.00000\n10344               0.000000                0.00000                0.00000\n7769                3.202490                0.00000                0.00000\n      128_GCCAAATAGCGTAATA-1 128_GCTGGGTTCTCAAGTG-1 128_GTCTCGTGTTCGCGAC-1\n10352              409.91876            337.2864596              361.95588\n7655               333.05899              0.5466555              134.05773\n7656                 0.00000             71.6118739                0.00000\n5816                25.61992            247.6349533                0.00000\n2600                51.23984             19.6795989              147.46351\n10353               25.61992              9.2931439                0.00000\n7657                 0.00000             45.9190642                0.00000\n1414                25.61992              7.6531774               13.40577\n7659                 0.00000              1.6399666                0.00000\n10336                0.00000              0.0000000                0.00000\n7650                 0.00000              0.0000000               67.02887\n7651                 0.00000             22.4128766                0.00000\n4696                25.61992              6.0132108                0.00000\n10344                0.00000              0.0000000                0.00000\n7769                 0.00000              8.1998329                0.00000\n      128_TAAGAGACAATGGTCT-1 128_TAGAGCTAGAGCTATA-1 128_TCCCGATCAGGCTGAA-1\n10352              560.86857            485.8493042             213.960973\n7655                 0.00000              0.9955928             130.869333\n7656                46.73905             77.6562412               2.077291\n5816                 0.00000             89.6033553             220.192846\n2600                31.15936              2.9867785              74.782476\n10353               15.57968              2.3230500               4.154582\n7657                46.73905             70.3552271               2.077291\n1414                31.15936              4.9779642              39.468529\n7659                 0.00000              0.6637286               4.154582\n10336                0.00000              0.0000000               0.000000\n7650                 0.00000              0.0000000              56.086857\n7651                 0.00000              0.3318643               0.000000\n4696                31.15936              5.3098285               0.000000\n10344                0.00000              0.0000000               0.000000\n7769                15.57968              8.2966070               6.231873\n      128_TGGCCAGGTATAGGTA-1 129_CACAAACAGTACGTTC-1 129_CATTATCGTTCGGGCT-1\n10352            312.1478679            200.7165889            304.0896744\n7655             176.5799982            156.1672972            188.6237401\n7656               1.1392258              0.0000000              0.0000000\n5816             114.6820634             71.9642404             80.6498702\n2600              86.9609024             83.7135042             58.6143865\n10353              3.4176774              0.4895527              2.6442580\n7657               0.7594839              0.0000000              0.0000000\n1414               8.7340644              3.4268686              0.4407097\n7659               0.0000000              0.9791053              0.4407097\n10336             19.7465804              0.0000000              0.0000000\n7650              25.8224514              0.9791053             41.4267093\n7651               0.3797419              0.0000000              0.0000000\n4696               1.5189677              2.4477633              3.0849677\n10344              0.0000000              0.0000000              0.0000000\n7769              15.5694192             10.7701584              8.8141935\n      129_GATCGATCAAACTGTC-1 129_GCTGCAGTCCCATTTA-1 129_GCTGGGTGTTGTCGCG-1\n10352               399.9845              247.04925              403.51378\n7655                282.3420               82.34975              249.79424\n7656                  0.0000                0.00000                0.00000\n5816                  0.0000               41.17488                0.00000\n2600                 94.1140              123.52463               38.42988\n10353                 0.0000               41.17488               19.21494\n7657                  0.0000                0.00000                0.00000\n1414                  0.0000                0.00000                0.00000\n7659                  0.0000                0.00000                0.00000\n10336                 0.0000               41.17488                0.00000\n7650                 70.5855                0.00000               57.64483\n7651                  0.0000                0.00000                0.00000\n4696                 23.5285                0.00000                0.00000\n10344                70.5855                0.00000                0.00000\n7769                  0.0000                0.00000                0.00000\n[1] \"PCA start\"\n[1] \"PCA done\"\n\nobj = ttm$object\nttm$pca.cell.2\n\n\n\n\n\nttm$genes.plot\n\nWarning: ggrepel: 13 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n\n\n\n\n\n\nttm$UDE.plot\n\n\n\n\n\nECD.plot(obj,y_cut = 25)\n\n\n\n\n\nscatter.plot(obj = obj,split.pattern = \"[_]\",n.col = 1)\n\n\n\n\n\nsaveRDS(obj,paste0(out_dir,patient,\"_obj_cotan.RDS\"))"
  }
]